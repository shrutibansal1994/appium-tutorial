'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _chaiAsPromised = require('chai-as-promised');

var _chaiAsPromised2 = _interopRequireDefault(_chaiAsPromised);

var _sinon = require('sinon');

var _sinon2 = _interopRequireDefault(_sinon);

var _appiumAndroidBootstrap = require('appium-android-bootstrap');

var _appiumAndroidBootstrap2 = _interopRequireDefault(_appiumAndroidBootstrap);

var _ = require('../../..');

var _2 = _interopRequireDefault(_);

var _appiumBaseDriver = require('appium-base-driver');

var driver = undefined;
var sandbox = _sinon2['default'].createSandbox();
_chai2['default'].should();
_chai2['default'].use(_chaiAsPromised2['default']);

describe('Find', function () {
  beforeEach(function () {
    driver = new _2['default']();
    driver.bootstrap = new _appiumAndroidBootstrap2['default']();
    driver.implicitWaitMs = 0;
    sandbox.stub(driver, 'validateLocatorStrategy');
    sandbox.stub(driver.bootstrap, 'sendAction');
    sandbox.stub(driver, 'doFindElementOrEls');
  });
  afterEach(function () {
    sandbox.restore();
  });
  describe('doFindElementOrEls', function () {
    it('should send find action to bootstrap', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            driver.doFindElementOrEls.restore();
            context$3$0.next = 3;
            return _regeneratorRuntime.awrap(driver.doFindElementOrEls('params'));

          case 3:
            driver.bootstrap.sendAction.calledWithExactly('find', 'params').should.be['true'];

          case 4:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
  });
  describe('findElorEls', function () {
    it('should throw an error if there is no selector', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.findElOrEls('xpath', null, false, 'some context').should.be.rejectedWith(/provide a selector/));

          case 2:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
    it('should be able to find element', function callee$2$0() {
      var params;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            params = { strategy: 'xpath', selector: '//*[1]', context: 'context', multiple: false };

            driver.doFindElementOrEls.returns('el1');
            context$3$0.next = 4;
            return _regeneratorRuntime.awrap(driver.findElOrEls('xpath', '//*[1]', false, 'context').should.become('el1'));

          case 4:
            driver.doFindElementOrEls.calledWithExactly(params).should.be['true'];

          case 5:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
    it('should be able to find elements', function callee$2$0() {
      var params;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            params = { strategy: 'xpath', selector: '//*[1]', context: 'context', multiple: true };

            driver.doFindElementOrEls.returns(['el1', 'el2']);
            context$3$0.next = 4;
            return _regeneratorRuntime.awrap(driver.findElOrEls('xpath', '//*[1]', true, 'context').should.eventually.be.deep.equal(['el1', 'el2']));

          case 4:
            driver.doFindElementOrEls.calledWithExactly(params).should.be['true'];

          case 5:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
    it('should not throws NoSuchElementError when searching multiple if element does not exist', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            driver.doFindElementOrEls.returns(null);
            context$3$0.next = 3;
            return _regeneratorRuntime.awrap(driver.findElOrEls('xpaht', '//*[1]', true).should.eventually.be.deep.equal([]));

          case 3:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
    it('should throw NoSuchElementError if element does not exist', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            driver.doFindElementOrEls.throws(new _appiumBaseDriver.errors.NoSuchElementError());
            context$3$0.next = 3;
            return _regeneratorRuntime.awrap(driver.findElOrEls('xpath', '//*[1]', false).should.be.rejectedWith(_appiumBaseDriver.errors.NoSuchElementError));

          case 3:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
    it('should fails if locator strategy is not valid', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            driver.validateLocatorStrategy.throws();
            context$3$0.next = 3;
            return _regeneratorRuntime.awrap(driver.findElOrEls().should.be.rejected);

          case 3:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
    it('should fails if gets unexpected error', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            driver.doFindElementOrEls.throws(new Error('unexpected_error'));
            context$3$0.next = 3;
            return _regeneratorRuntime.awrap(driver.findElOrEls('x', 'loc').should.be.rejectedWith('unexpected_error'));

          case 3:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
