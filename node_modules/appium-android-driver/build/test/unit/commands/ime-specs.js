'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _chaiAsPromised = require('chai-as-promised');

var _chaiAsPromised2 = _interopRequireDefault(_chaiAsPromised);

var _sinon = require('sinon');

var _sinon2 = _interopRequireDefault(_sinon);

var _ = require('../../..');

var _2 = _interopRequireDefault(_);

var _appiumAdb = require('appium-adb');

var _appiumAdb2 = _interopRequireDefault(_appiumAdb);

var _appiumBaseDriver = require('appium-base-driver');

_chai2['default'].should();
_chai2['default'].use(_chaiAsPromised2['default']);

describe('IME', function () {
  var driver = undefined;
  var sandbox = _sinon2['default'].createSandbox();
  beforeEach(function () {
    driver = new _2['default']();
    driver.adb = new _appiumAdb2['default']();
  });
  afterEach(function () {
    sandbox.restore();
  });
  describe('isIMEActivated', function () {
    it('should allways return true', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.isIMEActivated().should.eventually.be['true']);

          case 2:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
  });
  describe('availableIMEEngines', function () {
    it('should return available IMEEngines', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            sandbox.stub(driver.adb, 'availableIMEs').returns(['IME1', 'IME2']);
            context$3$0.next = 3;
            return _regeneratorRuntime.awrap(driver.availableIMEEngines().should.eventually.be.deep.equal(['IME1', 'IME2']));

          case 3:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
  });
  describe('getActiveIMEEngine', function () {
    it('should return active IME engine', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            sandbox.stub(driver.adb, 'defaultIME').returns('default_ime_engine');
            context$3$0.next = 3;
            return _regeneratorRuntime.awrap(driver.getActiveIMEEngine().should.become('default_ime_engine'));

          case 3:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
  });
  describe('activateIMEEngine', function () {
    it('should activate IME engine', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            sandbox.stub(driver.adb, 'availableIMEs').returns(['IME1', 'IME2']);
            sandbox.stub(driver.adb, 'enableIME');
            sandbox.stub(driver.adb, 'setIME');
            context$3$0.next = 5;
            return _regeneratorRuntime.awrap(driver.activateIMEEngine('IME2').should.be.fulfilled);

          case 5:
            driver.adb.enableIME.calledWithExactly('IME2').should.be['true'];
            driver.adb.setIME.calledWithExactly('IME2').should.be['true'];

          case 7:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
    it('should throws error if IME not found', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            sandbox.stub(driver.adb, 'availableIMEs').returns(['IME1', 'IME2']);
            context$3$0.next = 3;
            return _regeneratorRuntime.awrap(driver.activateIMEEngine('IME3').should.be.rejectedWith(_appiumBaseDriver.errors.IMENotAvailableError));

          case 3:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
  });
  describe('deactivateIMEEngine', function () {
    it('should deactivate IME engine', function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            sandbox.stub(driver, 'getActiveIMEEngine').returns('active_ime_engine');
            sandbox.stub(driver.adb, 'disableIME');
            context$3$0.next = 4;
            return _regeneratorRuntime.awrap(driver.deactivateIMEEngine().should.be.fulfilled);

          case 4:
            driver.adb.disableIME.calledWithExactly('active_ime_engine');

          case 5:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvdW5pdC9jb21tYW5kcy9pbWUtc3BlY3MuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O29CQUFpQixNQUFNOzs7OzhCQUNJLGtCQUFrQjs7OztxQkFDM0IsT0FBTzs7OztnQkFDQyxVQUFVOzs7O3lCQUNwQixZQUFZOzs7O2dDQUNMLG9CQUFvQjs7QUFFM0Msa0JBQUssTUFBTSxFQUFFLENBQUM7QUFDZCxrQkFBSyxHQUFHLDZCQUFnQixDQUFDOztBQUV6QixRQUFRLENBQUMsS0FBSyxFQUFFLFlBQVk7QUFDMUIsTUFBSSxNQUFNLFlBQUEsQ0FBQztBQUNYLE1BQUksT0FBTyxHQUFHLG1CQUFNLGFBQWEsRUFBRSxDQUFDO0FBQ3BDLFlBQVUsQ0FBQyxZQUFZO0FBQ3JCLFVBQU0sR0FBRyxtQkFBbUIsQ0FBQztBQUM3QixVQUFNLENBQUMsR0FBRyxHQUFHLDRCQUFTLENBQUM7R0FDeEIsQ0FBQyxDQUFDO0FBQ0gsV0FBUyxDQUFDLFlBQVk7QUFDcEIsV0FBTyxDQUFDLE9BQU8sRUFBRSxDQUFDO0dBQ25CLENBQUMsQ0FBQztBQUNILFVBQVEsQ0FBQyxnQkFBZ0IsRUFBRSxZQUFZO0FBQ3JDLE1BQUUsQ0FBQyw0QkFBNEIsRUFBRTs7Ozs7NkNBQ3pCLE1BQU0sQ0FBQyxjQUFjLEVBQUUsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLEVBQUUsUUFBSzs7Ozs7OztLQUN4RCxDQUFDLENBQUM7R0FDSixDQUFDLENBQUM7QUFDSCxVQUFRLENBQUMscUJBQXFCLEVBQUUsWUFBWTtBQUMxQyxNQUFFLENBQUMsb0NBQW9DLEVBQUU7Ozs7QUFDdkMsbUJBQU8sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsRUFBRSxlQUFlLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQzs7NkNBQzlELE1BQU0sQ0FBQyxtQkFBbUIsRUFBRSxDQUMvQixNQUFNLENBQUMsVUFBVSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFDOzs7Ozs7O0tBQ3JELENBQUMsQ0FBQztHQUNKLENBQUMsQ0FBQztBQUNILFVBQVEsQ0FBQyxvQkFBb0IsRUFBRSxZQUFZO0FBQ3pDLE1BQUUsQ0FBQyxpQ0FBaUMsRUFBRTs7OztBQUNwQyxtQkFBTyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxFQUFFLFlBQVksQ0FBQyxDQUFDLE9BQU8sQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDOzs2Q0FDL0QsTUFBTSxDQUFDLGtCQUFrQixFQUFFLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxvQkFBb0IsQ0FBQzs7Ozs7OztLQUN0RSxDQUFDLENBQUM7R0FDSixDQUFDLENBQUM7QUFDSCxVQUFRLENBQUMsbUJBQW1CLEVBQUUsWUFBWTtBQUN4QyxNQUFFLENBQUMsNEJBQTRCLEVBQUU7Ozs7QUFDL0IsbUJBQU8sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsRUFBRSxlQUFlLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQztBQUNwRSxtQkFBTyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxFQUFFLFdBQVcsQ0FBQyxDQUFDO0FBQ3RDLG1CQUFPLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLEVBQUUsUUFBUSxDQUFDLENBQUM7OzZDQUM3QixNQUFNLENBQUMsaUJBQWlCLENBQUMsTUFBTSxDQUFDLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxTQUFTOzs7QUFDMUQsa0JBQU0sQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLGlCQUFpQixDQUFDLE1BQU0sQ0FBQyxDQUFDLE1BQU0sQ0FBQyxFQUFFLFFBQUssQ0FBQztBQUM5RCxrQkFBTSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsaUJBQWlCLENBQUMsTUFBTSxDQUFDLENBQUMsTUFBTSxDQUFDLEVBQUUsUUFBSyxDQUFDOzs7Ozs7O0tBQzVELENBQUMsQ0FBQztBQUNILE1BQUUsQ0FBQyxzQ0FBc0MsRUFBRTs7OztBQUN6QyxtQkFBTyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxFQUFFLGVBQWUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDOzs2Q0FDOUQsTUFBTSxDQUFDLGlCQUFpQixDQUFFLE1BQU0sQ0FBQyxDQUNwQyxNQUFNLENBQUMsRUFBRSxDQUFDLFlBQVksQ0FBQyx5QkFBTyxvQkFBb0IsQ0FBQzs7Ozs7OztLQUN2RCxDQUFDLENBQUM7R0FDSixDQUFDLENBQUM7QUFDSCxVQUFRLENBQUMscUJBQXFCLEVBQUUsWUFBWTtBQUMxQyxNQUFFLENBQUMsOEJBQThCLEVBQUU7Ozs7QUFDakMsbUJBQU8sQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLG9CQUFvQixDQUFDLENBQUMsT0FBTyxDQUFDLG1CQUFtQixDQUFDLENBQUM7QUFDeEUsbUJBQU8sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsRUFBRSxZQUFZLENBQUMsQ0FBQzs7NkNBQ2pDLE1BQU0sQ0FBQyxtQkFBbUIsRUFBRSxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsU0FBUzs7O0FBQ3RELGtCQUFNLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxpQkFBaUIsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDOzs7Ozs7O0tBQzlELENBQUMsQ0FBQztHQUNKLENBQUMsQ0FBQztDQUNKLENBQUMsQ0FBQyIsImZpbGUiOiJ0ZXN0L3VuaXQvY29tbWFuZHMvaW1lLXNwZWNzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNoYWkgZnJvbSAnY2hhaSc7XG5pbXBvcnQgY2hhaUFzUHJvbWlzZWQgZnJvbSAnY2hhaS1hcy1wcm9taXNlZCc7XG5pbXBvcnQgc2lub24gZnJvbSAnc2lub24nO1xuaW1wb3J0IEFuZHJvaWREcml2ZXIgZnJvbSAnLi4vLi4vLi4nO1xuaW1wb3J0IEFEQiBmcm9tICdhcHBpdW0tYWRiJztcbmltcG9ydCB7IGVycm9ycyB9IGZyb20gJ2FwcGl1bS1iYXNlLWRyaXZlcic7XG5cbmNoYWkuc2hvdWxkKCk7XG5jaGFpLnVzZShjaGFpQXNQcm9taXNlZCk7XG5cbmRlc2NyaWJlKCdJTUUnLCBmdW5jdGlvbiAoKSB7XG4gIGxldCBkcml2ZXI7XG4gIGxldCBzYW5kYm94ID0gc2lub24uY3JlYXRlU2FuZGJveCgpO1xuICBiZWZvcmVFYWNoKGZ1bmN0aW9uICgpIHtcbiAgICBkcml2ZXIgPSBuZXcgQW5kcm9pZERyaXZlcigpO1xuICAgIGRyaXZlci5hZGIgPSBuZXcgQURCKCk7XG4gIH0pO1xuICBhZnRlckVhY2goZnVuY3Rpb24gKCkge1xuICAgIHNhbmRib3gucmVzdG9yZSgpO1xuICB9KTtcbiAgZGVzY3JpYmUoJ2lzSU1FQWN0aXZhdGVkJywgZnVuY3Rpb24gKCkge1xuICAgIGl0KCdzaG91bGQgYWxsd2F5cyByZXR1cm4gdHJ1ZScsIGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICAgIGF3YWl0IGRyaXZlci5pc0lNRUFjdGl2YXRlZCgpLnNob3VsZC5ldmVudHVhbGx5LmJlLnRydWU7XG4gICAgfSk7XG4gIH0pO1xuICBkZXNjcmliZSgnYXZhaWxhYmxlSU1FRW5naW5lcycsIGZ1bmN0aW9uICgpIHtcbiAgICBpdCgnc2hvdWxkIHJldHVybiBhdmFpbGFibGUgSU1FRW5naW5lcycsIGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICAgIHNhbmRib3guc3R1Yihkcml2ZXIuYWRiLCAnYXZhaWxhYmxlSU1FcycpLnJldHVybnMoWydJTUUxJywgJ0lNRTInXSk7XG4gICAgICBhd2FpdCBkcml2ZXIuYXZhaWxhYmxlSU1FRW5naW5lcygpXG4gICAgICAgIC5zaG91bGQuZXZlbnR1YWxseS5iZS5kZWVwLmVxdWFsKFsnSU1FMScsICdJTUUyJ10pO1xuICAgIH0pO1xuICB9KTtcbiAgZGVzY3JpYmUoJ2dldEFjdGl2ZUlNRUVuZ2luZScsIGZ1bmN0aW9uICgpIHtcbiAgICBpdCgnc2hvdWxkIHJldHVybiBhY3RpdmUgSU1FIGVuZ2luZScsIGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICAgIHNhbmRib3guc3R1Yihkcml2ZXIuYWRiLCAnZGVmYXVsdElNRScpLnJldHVybnMoJ2RlZmF1bHRfaW1lX2VuZ2luZScpO1xuICAgICAgYXdhaXQgZHJpdmVyLmdldEFjdGl2ZUlNRUVuZ2luZSgpLnNob3VsZC5iZWNvbWUoJ2RlZmF1bHRfaW1lX2VuZ2luZScpO1xuICAgIH0pO1xuICB9KTtcbiAgZGVzY3JpYmUoJ2FjdGl2YXRlSU1FRW5naW5lJywgZnVuY3Rpb24gKCkge1xuICAgIGl0KCdzaG91bGQgYWN0aXZhdGUgSU1FIGVuZ2luZScsIGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICAgIHNhbmRib3guc3R1Yihkcml2ZXIuYWRiLCAnYXZhaWxhYmxlSU1FcycpLnJldHVybnMoWydJTUUxJywgJ0lNRTInXSk7XG4gICAgICBzYW5kYm94LnN0dWIoZHJpdmVyLmFkYiwgJ2VuYWJsZUlNRScpO1xuICAgICAgc2FuZGJveC5zdHViKGRyaXZlci5hZGIsICdzZXRJTUUnKTtcbiAgICAgIGF3YWl0IGRyaXZlci5hY3RpdmF0ZUlNRUVuZ2luZSgnSU1FMicpLnNob3VsZC5iZS5mdWxmaWxsZWQ7XG4gICAgICBkcml2ZXIuYWRiLmVuYWJsZUlNRS5jYWxsZWRXaXRoRXhhY3RseSgnSU1FMicpLnNob3VsZC5iZS50cnVlO1xuICAgICAgZHJpdmVyLmFkYi5zZXRJTUUuY2FsbGVkV2l0aEV4YWN0bHkoJ0lNRTInKS5zaG91bGQuYmUudHJ1ZTtcbiAgICB9KTtcbiAgICBpdCgnc2hvdWxkIHRocm93cyBlcnJvciBpZiBJTUUgbm90IGZvdW5kJywgYXN5bmMgZnVuY3Rpb24gKCkge1xuICAgICAgc2FuZGJveC5zdHViKGRyaXZlci5hZGIsICdhdmFpbGFibGVJTUVzJykucmV0dXJucyhbJ0lNRTEnLCAnSU1FMiddKTtcbiAgICAgIGF3YWl0IGRyaXZlci5hY3RpdmF0ZUlNRUVuZ2luZSAoJ0lNRTMnKVxuICAgICAgICAuc2hvdWxkLmJlLnJlamVjdGVkV2l0aChlcnJvcnMuSU1FTm90QXZhaWxhYmxlRXJyb3IpO1xuICAgIH0pO1xuICB9KTtcbiAgZGVzY3JpYmUoJ2RlYWN0aXZhdGVJTUVFbmdpbmUnLCBmdW5jdGlvbiAoKSB7XG4gICAgaXQoJ3Nob3VsZCBkZWFjdGl2YXRlIElNRSBlbmdpbmUnLCBhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgICBzYW5kYm94LnN0dWIoZHJpdmVyLCAnZ2V0QWN0aXZlSU1FRW5naW5lJykucmV0dXJucygnYWN0aXZlX2ltZV9lbmdpbmUnKTtcbiAgICAgIHNhbmRib3guc3R1Yihkcml2ZXIuYWRiLCAnZGlzYWJsZUlNRScpO1xuICAgICAgYXdhaXQgZHJpdmVyLmRlYWN0aXZhdGVJTUVFbmdpbmUoKS5zaG91bGQuYmUuZnVsZmlsbGVkO1xuICAgICAgZHJpdmVyLmFkYi5kaXNhYmxlSU1FLmNhbGxlZFdpdGhFeGFjdGx5KCdhY3RpdmVfaW1lX2VuZ2luZScpO1xuICAgIH0pO1xuICB9KTtcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIuLi8uLi8uLi8uLiJ9
