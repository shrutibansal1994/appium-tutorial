'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _appiumSupport = require('appium-support');

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var CD_BASE_DIR = _path2['default'].resolve(__dirname, '..', '..', 'chromedriver');

function getChromeVersion(adb, bundleId) {
  var _ref, versionName;

  return _regeneratorRuntime.async(function getChromeVersion$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.next = 2;
        return _regeneratorRuntime.awrap(adb.getPackageInfo(bundleId));

      case 2:
        _ref = context$1$0.sent;
        versionName = _ref.versionName;
        return context$1$0.abrupt('return', versionName);

      case 5:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
}

function getChromedriverDir() {
  var platform = arguments.length <= 0 || arguments[0] === undefined ? getCurPlatform() : arguments[0];

  return _path2['default'].resolve(CD_BASE_DIR, platform);
}

function getChromedriverBinaryPath() {
  var platform = arguments.length <= 0 || arguments[0] === undefined ? getCurPlatform() : arguments[0];
  var arch = arguments.length <= 1 || arguments[1] === undefined ? null : arguments[1];
  var baseDir, ext;
  return _regeneratorRuntime.async(function getChromedriverBinaryPath$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        baseDir = getChromedriverDir(platform);
        ext = '';

        if (!(platform === 'win')) {
          context$1$0.next = 6;
          break;
        }

        ext = '.exe';
        context$1$0.next = 14;
        break;

      case 6:
        if (!(platform === 'linux')) {
          context$1$0.next = 14;
          break;
        }

        context$1$0.t0 = arch;

        if (context$1$0.t0) {
          context$1$0.next = 12;
          break;
        }

        context$1$0.next = 11;
        return _regeneratorRuntime.awrap(_appiumSupport.system.arch());

      case 11:
        context$1$0.t0 = context$1$0.sent;

      case 12:
        context$1$0.t1 = context$1$0.t0;
        ext = '_' + context$1$0.t1;

      case 14:
        return context$1$0.abrupt('return', _path2['default'].resolve(baseDir, 'chromedriver' + ext));

      case 15:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
}

function getCurPlatform() {
  return _appiumSupport.system.isWindows() ? 'win' : _appiumSupport.system.isMac() ? 'mac' : 'linux';
}

exports.getChromeVersion = getChromeVersion;
exports.getChromedriverDir = getChromedriverDir;
exports.getChromedriverBinaryPath = getChromedriverBinaryPath;
exports.getCurPlatform = getCurPlatform;
exports.CD_BASE_DIR = CD_BASE_DIR;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi91dGlscy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OzZCQUF1QixnQkFBZ0I7O29CQUN0QixNQUFNOzs7O0FBR3ZCLElBQU0sV0FBVyxHQUFHLGtCQUFLLE9BQU8sQ0FBQyxTQUFTLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxjQUFjLENBQUMsQ0FBQzs7QUFFeEUsU0FBZSxnQkFBZ0IsQ0FBRSxHQUFHLEVBQUUsUUFBUTtZQUNyQyxXQUFXOzs7Ozs7eUNBQVUsR0FBRyxDQUFDLGNBQWMsQ0FBQyxRQUFRLENBQUM7Ozs7QUFBakQsbUJBQVcsUUFBWCxXQUFXOzRDQUNYLFdBQVc7Ozs7Ozs7Q0FDbkI7O0FBRUQsU0FBUyxrQkFBa0IsR0FBK0I7TUFBN0IsUUFBUSx5REFBRyxjQUFjLEVBQUU7O0FBQ3RELFNBQU8sa0JBQUssT0FBTyxDQUFDLFdBQVcsRUFBRSxRQUFRLENBQUMsQ0FBQztDQUM1Qzs7QUFFRCxTQUFlLHlCQUF5QjtNQUFFLFFBQVEseURBQUcsY0FBYyxFQUFFO01BQUUsSUFBSSx5REFBRyxJQUFJO01BQzFFLE9BQU8sRUFDVCxHQUFHOzs7O0FBREQsZUFBTyxHQUFHLGtCQUFrQixDQUFDLFFBQVEsQ0FBQztBQUN4QyxXQUFHLEdBQUcsRUFBRTs7Y0FDUixRQUFRLEtBQUssS0FBSyxDQUFBOzs7OztBQUNwQixXQUFHLEdBQUcsTUFBTSxDQUFDOzs7OztjQUNKLFFBQVEsS0FBSyxPQUFPLENBQUE7Ozs7O3lCQUNuQixJQUFJOzs7Ozs7Ozt5Q0FBVSxzQkFBTyxJQUFJLEVBQUU7Ozs7Ozs7QUFBckMsV0FBRzs7OzRDQUdFLGtCQUFLLE9BQU8sQ0FBQyxPQUFPLG1CQUFpQixHQUFHLENBQUc7Ozs7Ozs7Q0FDbkQ7O0FBRUQsU0FBUyxjQUFjLEdBQUk7QUFDekIsU0FBTyxzQkFBTyxTQUFTLEVBQUUsR0FBRyxLQUFLLEdBQUksc0JBQU8sS0FBSyxFQUFFLEdBQUcsS0FBSyxHQUFHLE9BQU8sQUFBQyxDQUFDO0NBQ3hFOztRQUVRLGdCQUFnQixHQUFoQixnQkFBZ0I7UUFBRSxrQkFBa0IsR0FBbEIsa0JBQWtCO1FBQUUseUJBQXlCLEdBQXpCLHlCQUF5QjtRQUMvRCxjQUFjLEdBQWQsY0FBYztRQUFFLFdBQVcsR0FBWCxXQUFXIiwiZmlsZSI6ImxpYi91dGlscy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHN5c3RlbSB9IGZyb20gJ2FwcGl1bS1zdXBwb3J0JztcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xuXG5cbmNvbnN0IENEX0JBU0VfRElSID0gcGF0aC5yZXNvbHZlKF9fZGlybmFtZSwgJy4uJywgJy4uJywgJ2Nocm9tZWRyaXZlcicpO1xuXG5hc3luYyBmdW5jdGlvbiBnZXRDaHJvbWVWZXJzaW9uIChhZGIsIGJ1bmRsZUlkKSB7XG4gIGNvbnN0IHt2ZXJzaW9uTmFtZX0gPSBhd2FpdCBhZGIuZ2V0UGFja2FnZUluZm8oYnVuZGxlSWQpO1xuICByZXR1cm4gdmVyc2lvbk5hbWU7XG59XG5cbmZ1bmN0aW9uIGdldENocm9tZWRyaXZlckRpciAocGxhdGZvcm0gPSBnZXRDdXJQbGF0Zm9ybSgpKSB7XG4gIHJldHVybiBwYXRoLnJlc29sdmUoQ0RfQkFTRV9ESVIsIHBsYXRmb3JtKTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gZ2V0Q2hyb21lZHJpdmVyQmluYXJ5UGF0aCAocGxhdGZvcm0gPSBnZXRDdXJQbGF0Zm9ybSgpLCBhcmNoID0gbnVsbCkge1xuICBjb25zdCBiYXNlRGlyID0gZ2V0Q2hyb21lZHJpdmVyRGlyKHBsYXRmb3JtKTtcbiAgbGV0IGV4dCA9ICcnO1xuICBpZiAocGxhdGZvcm0gPT09ICd3aW4nKSB7XG4gICAgZXh0ID0gJy5leGUnO1xuICB9IGVsc2UgaWYgKHBsYXRmb3JtID09PSAnbGludXgnKSB7XG4gICAgZXh0ID0gYF8ke2FyY2ggfHwgYXdhaXQgc3lzdGVtLmFyY2goKX1gO1xuICB9XG5cbiAgcmV0dXJuIHBhdGgucmVzb2x2ZShiYXNlRGlyLCBgY2hyb21lZHJpdmVyJHtleHR9YCk7XG59XG5cbmZ1bmN0aW9uIGdldEN1clBsYXRmb3JtICgpIHtcbiAgcmV0dXJuIHN5c3RlbS5pc1dpbmRvd3MoKSA/ICd3aW4nIDogKHN5c3RlbS5pc01hYygpID8gJ21hYycgOiAnbGludXgnKTtcbn1cblxuZXhwb3J0IHsgZ2V0Q2hyb21lVmVyc2lvbiwgZ2V0Q2hyb21lZHJpdmVyRGlyLCBnZXRDaHJvbWVkcml2ZXJCaW5hcnlQYXRoLFxuICAgICAgICAgZ2V0Q3VyUGxhdGZvcm0sIENEX0JBU0VfRElSIH07XG4iXSwic291cmNlUm9vdCI6Ii4uLy4uIn0=
